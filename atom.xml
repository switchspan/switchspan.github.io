<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[SwitchSpan]]></title>
  <link href="http://switchspan.github.io/atom.xml" rel="self"/>
  <link href="http://switchspan.github.io/"/>
  <updated>2014-01-07T22:47:18-05:00</updated>
  <id>http://switchspan.github.io/</id>
  <author>
    <name><![CDATA[Ken Taylor]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Future-Proofing Your Career]]></title>
    <link href="http://switchspan.github.io/blog/2013/10/24/future-proofing-your-career/"/>
    <updated>2013-10-24T11:53:00-04:00</updated>
    <id>http://switchspan.github.io/blog/2013/10/24/future-proofing-your-career</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://switchspan.github.io/images/prag_thinking_book.jpg" width="200" height="308">
I finished reading <a href="http://pragprog.com/book/ahptl/pragmatic-thinking-and-learning">Pragmatic Thinking &amp; Learning: Refactor Your Wetware</a> by <a href="http://en.wikipedia.org/wiki/Andy_Hunt_%28author%29">Andy Hunt</a> a couple of days ago and I have been reflecting on it a lot lately. (Note: <a href="http://www.mindmeister.com/100157863/pragmatic-thinking-and-learning-refactor-your-wetware">here</a> is a very cool mind map of the books contents by <a href="http://www.mindmeister.com">MindMeister</a>) The major topics of the book are:</p>

<ol>
<li>The <a href="http://en.wikipedia.org/wiki/Dreyfus_model_of_skill_acquisition">Dreyfus model of skill acquisition</a></li>
<li>Using your &lsquo;<a href="http://www.drawright.com/theory.htm">R-mode</a>&rsquo; of the brain</li>
<li>Learning deliberately</li>
<li>Gaining experience</li>
</ol>


<p>There are plenty of other items which Andy delves into throughout the book. It is very thoughtfully researched and written &mdash; and it is a <em>must</em> for any career software developer to read (Along with <a href="http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882">Clean Code</a>, <a href="http://www.amazon.com/The-Clean-Coder-Professional-Programmers/dp/0137081073">The Clean Coder</a> and the <a href="http://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X/ref=sr_1_1?s=books&amp;ie=UTF8&amp;qid=1382726080&amp;sr=1-1&amp;keywords=The+Pragmatic+Programmer">Pragmatic Programmer</a>).</p>

<h2>The &lsquo;Right&rsquo; Brain</h2>

<p><img class="left" src="http://switchspan.github.io/images/dreyfus-model.png" width="289" height="70">
At it&rsquo;s essence, the book points out that each of us have a different level of expertise in any skill we have  &mdash; be it programming, cooking, speaking, etc. The majority of people stay at a &lsquo;advance beginner&rsquo; level on the Dreyfus model and never really advance into the &lsquo;competent&rsquo;, &lsquo;proficient&rsquo; or &lsquo;expert&rsquo; levels of the model.  <img class="right" src="http://switchspan.github.io/images/left_right_brain.jpg" width="250" height="210">
I believe we should all aspire to achieve an &lsquo;expert&rsquo; level skills in the areas that correspond to our career field. In order to attain this level, we have to engage the <a href="http://www.drawright.com/theory.htm">R-mode</a> of our brain to leverage our experiences. The R-mode is the holistic, intuitive, creative portion of our brain. You can&rsquo;t access your R-mode as easily as the <a href="http://www.creativeglossary.com/art-mediums/left-side-of-the-brain-l-mode-characteristics.html">L-mode</a> &mdash; in fact, it typically is drown out by L-mode &lsquo;chatter&rsquo; (e.g. the constant stream of though that pops into your head like &lsquo;<em>I wonder what I should eat for lunch&hellip;</em>&rsquo;).</p>

<h2>Intuition and the Expert</h2>

<p><img class="left" src="http://switchspan.github.io/images/intuition_head.jpg" width="250" height="250">
Over the past couple of months I&rsquo;ve read quite a few technology related articles that seem to &ldquo;<a href="http://www.thefreedictionary.com/dovetail">dovetail</a>&rdquo; with the subject.  The book <a href="http://en.wikipedia.org/wiki/Blink_(book)">Blink: The Power of Thinking Without Thinking</a> by <a href="http://en.wikipedia.org/wiki/Malcolm_Gladwell">Malcolm Gladwell</a> points to increasing scientific evidence of the R-mode of the brain using what is termed &lsquo;<a href="http://en.wikipedia.org/wiki/Thin-slicing">thin-slicing</a>&rsquo; of events to generate what we think of as &lsquo;<em>intuition</em>&rsquo;. More often than not this intuition is correct &mdash; but it can be fooled by biases that the brain has.
<img class="right" src="http://switchspan.github.io/images/blink_book.jpg" width="180" height="360">
Intuition is one of the main items that gives an expert his/her expertise. It lets the expert arrive at a correct solution faster than any of the other levels of the Dreyfus model. <em>This speed and correctness is exactly what is needed to compete in our global economy</em>. <br/>
We tend to discount intuition and the R-mode faculties because they can&rsquo;t be quantified as easily as say, passing a calculus exam with flying colors.</p>

<h2>Rise of the Creative Economy</h2>

<p><img class="left" src="http://switchspan.github.io/images/creativemind_illustrated.png" width="224" height="274">
A good part of &lsquo;due diligence&rsquo; for your career should be looking ahead to the horizon to see what is on it. One of the recurring themes I see in most publications is the future demand for &lsquo;creatives&rsquo; in most organizations. A <a href="http://www.cato-unbound.org/2006/06/04/richard-florida/future-american-workforce-global-creative-economy">recent article</a> by the CATO institute points to the &lsquo;creative economy&rsquo; as the future of the american economy &mdash; while <a href="http://www.forbes.com/sites/elainepofeldt/2012/12/28/want-to-recession-proof-yourself-join-the-creative-class/">another article</a> by Forbes suggests joining the &ldquo;<a href="http://en.wikipedia.org/wiki/Creative_class">creative class</a>&rdquo; as a way to recession proof yourself.</p>

<p>With all of the above in mind, how do we future-proof our careers in technology? I would start with reading <a href="http://pragprog.com/book/ahptl/pragmatic-thinking-and-learning">Pragmatic Thinking &amp; Learning</a>. While you are reading it, I would do three things:</p>

<h3>1) Determine your interests</h3>

<p>I believe you should align your career with what your interests are. Figure out what you like to do. This can turn a &lsquo;job&rsquo; that you work into a &lsquo;career&rsquo; that you enjoy. Think about it: <a href="http://www.ask.com/question/what-percentage-of-our-lives-are-spent-working">roughly one third of your life is spent working</a> &mdash; you might as well be doing something you enjoy.<br/>
When you are doing something you like and are interested in, it makes learning easier as well. The <a href="http://www.wired.com">Wired magazine</a> article <a href="http://www.wired.com/business/2013/10/free-thinkers/">&ldquo;Free Thinkers&rdquo;</a> (by Joshua Davis) references new teaching methods which leverage that interest/curiosity in different subjects to accelerate learning.</p>

<h3>2) Practice active career development</h3>

<p>In order to attain competent, proficient or expert skill in a particular area you must deliberately and actively learn in the area. This means taking charge of your own professional development.</p>

<h4>If you are a programmer/technologist:</h4>

<p><img class="right" src="http://switchspan.github.io/images/ruby_users_meeting1.jpg" width="300" height="148">
Don&rsquo;t wait for the company that you work for to send you to training or ask you to investigate a particular technology &mdash; go and learn it on your own.</p>

<p>With all of the demands of a busy life, this means <strong>you</strong> are going to need to set time aside to learn the subject. If you don&rsquo;t schedule it and abide by the schedule it probably won&rsquo;t get done.</p>

<p>Here are some suggestions:</p>

<ul>
<li>Read a new technology book (or two)</li>
<li>Play around with a new framework or language</li>
<li>Get involved in maintaining an <a href="http://en.wikipedia.org/wiki/Open-source_software">OSS</a> project.</li>
</ul>


<p>Find the learning technique that works best for you. We have so many learning resources today (thanks in large part to the proliferation of Internet technologies). Here are a few:</p>

<ul>
<li><a href="http://en.wikipedia.org/wiki/Massive_open_online_course">MOOCs</a> ( <a href="http://www.edx.org/">edX</a>, <a href="http://www.coursera.org">Coursera</a>, <a href="http://www.udacity.com">Udacity</a>, et al. )</li>
<li>The <a href="https://www.khanacademy.org/">Khan Academy</a> &amp; <a href="http://www.youtube.com/">YouTube</a> HowTo videos</li>
<li>Technology related blogs &amp; sites</li>
<li>Tutorial &amp; Learning Sites ( <a href="http://www.pluralsight.com">PluralSight</a>, <a href="http://www.codeschool.com">CodeSchool</a>, <a href="http://www.codecademy.com/">CodeAcademy</a>, <a href="http://teamtreehouse.com/">TreeHouse</a> et al. )</li>
</ul>


<p>My personal favorite learning technique: <strong>get involved in a local user group</strong>. Surround yourself with others who are actively learning: <em>Exchange ideas.</em> <em>Network.</em> Give a talk on a technology that you like! Nothing hammers a topic home better than having to teach it.</p>

<p>I highly recommend making your own &ldquo;<a href="http://nohack.eingenetzt.com/character-building/pragmatic-investment-plan/">Pragmatic Investment Plan</a>&rdquo; to practice career development.</p>

<h3>3) Engage your creative side</h3>

<p><img class="left" src="http://switchspan.github.io/images/sketching-the-branding-process.jpg" width="200" height="196">
In order to use the R-mode thinking you need to work at engaging your creative side actively. <em>The R-mode can only be invited&mdash;not compelled&mdash;to work on a problem.</em> The L-mode of your brain will drown out the R-mode in most cases. You must find ways to silence the L-mode chatter and allow the R-mode to &ldquo;do it&rsquo;s thing&rdquo;&trade;.</p>

<p>The ways to do this are too numerous to list in a blog post &mdash; so here are just a few:</p>

<ul>
<li>Draw a picture of the problem you are trying to solve. What visual metaphor is appropriate?</li>
<li>Describe problems verbally <img class="right" src="http://switchspan.github.io/images/meditation_pic.jpg" width="200" height="200"></li>
<li>Use <a href="http://en.wikipedia.org/wiki/Mind_map">mindmaps</a> when brainstorming</li>
<li>Use a walk as a way to clear the L-mode &lsquo;chatter&rsquo;</li>
<li>Try acting out a process rather than diagramming it</li>
<li>Doodle in your idle time or during a phone call</li>
<li>Keep a dream log</li>
<li>Take up daily meditation</li>
</ul>


<h2>Conclusion</h2>

<p>Managing <strong>your</strong> career is <strong>your</strong> own responsibility. <img class="left" src="http://switchspan.github.io/images/footprints_sand.jpg" width="200"> Take an active role in this portion of your life and never quit striving to learn more.</p>

<p><em>Become a better learner.</em> <em>Start the journey to expert in a skill area.</em></p>

<p>Leave a comment and let me know how your journey is progressing!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[From WordPress to Octopress]]></title>
    <link href="http://switchspan.github.io/blog/2013/06/02/from-wordpress-to-octopress/"/>
    <updated>2013-06-02T12:59:00-04:00</updated>
    <id>http://switchspan.github.io/blog/2013/06/02/from-wordpress-to-octopress</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://switchspan.github.io/images/wordpress_to_octopress.png" width="440" title="'Wordpress to Octopress'" ></p>

<p>You may or may not have noticed this blog has switched from a
hosted <a href="http://www.wordpress.org">WordPress</a> blog to a <a href="http://octopress.org">Octopress</a> blog.
I originally started looking at migrating the blog for a couple of
reasons:</p>

<ol>
<li>I love ruby and I wanted to play around with <a href="http://jekyllrb.com">Jekyll</a></li>
<li>Jekyll can be deployed easily to <a href="http://pages.github.com">GitHub Pages</a></li>
<li>Github Pages is free (as in like free beer&hellip;)</li>
<li>The amount of comment spam I am getting on WordPress was driving me
crazy (yes I know I can use Akismet)</li>
<li>I wanted to customize my blog a little more than what is allowed
with WordPress</li>
</ol>


<!-- more -->


<h2>The initial search</h2>

<p> Initially I started looking at some of the blogging tools that my
friends at the <a href="http://757rb.org">Hampton Roads Ruby Users Group</a> where using.
The first one I came across that caught my interest was <a href="http://github.com/metaskills">Ken Collins&#8217;</a> blog: <a href="http://metaskills.net">metaskills.net</a>.
The metaskills blog uses a modified version of Jekyll which Ken has added in a few items to organize and publish easier.
You can check out his code <a href="https://github.com/metaskills/metaskills.net">here</a>.</p>

<h3>First draft: Jekyll</h3>

<p><img class="right" src="http://switchspan.github.io/images/octojekyll.png" width="200" title="'OctoJekyll'" >
I started out creating a plain Jekyll blog and looking at how the static
site generation worked.
There are plenty of resources on the <a href="http://jekyllrb.com">Jekyll site</a> which can show you how to install Jekyll and get it running.
You will need <a href="http://www.ruby-lang.org">Ruby</a> and
<a href="http://www.rubygems.org">RubyGems</a>.
If you are dabbling in Ruby or Rails, you will already have both of them.</p>

<h3>Second draft: Jekyll Bootstrap</h3>

<p><img class="left" src="http://switchspan.github.io/images/Jekyll-bootstrap-screen.png" width="300" title="'Jekyll Bootstrap Getting Started screen'" >
While I found Jekyll pretty cool, I wanted my site to have a little bit
of styling.
Not being a graphic designer of any sort, I started looking for some
themes that I could use to modify.
After doing a little digging on Google for Jekyll themes, I found <a href="http://jekyllbootstrap.com">Jekyll Bootstrap</a> by
X. Note: There is also another spin off from this project called
<a href="http://ruhoh.com">Ruhoh</a>.</p>

<h3>Final draft: Octopress</h3>

<p><img class="right" src="http://switchspan.github.io/images/octopress-logo.png" width="200" title="'Octopress Logo'" >
I am not sure why I never noticed or found it sooner (as I am sure I
have heard of Octopress before!) &mdash; but I finally stumbled across the
<a href="http://octopress.org">Octopress site</a>. Octopress is a framework
designed by <a href="http://brandonmathis.com">Brandon Mathis</a> for Jekyll.</p>

<p><strong>I had finally found the toolset I was looking for!</strong></p>

<p>Octopress had plenty of themes, still stuck to Jekyll as the method of generating static
sites &mdash; and had plugins which smoothed over some of the &lsquo;warts&rsquo; of
Jekyll out of the box.</p>

<p>Here is some of the static blog-generating goodness (i.e. integrations) you will find in
Octopress:</p>

<ul>
<li>Github</li>
<li>Google+</li>
<li>Twitter</li>
<li>Disqus</li>
<li>Google Analytics</li>
<li>Pinboard</li>
<li>Delicious</li>
<li>Facebook likes</li>
</ul>


<p>The configuration file in a &lsquo;stock&rsquo; Octopress install is a nice YAML
layout. Here is a snippet:</p>

<figure class='code'><figcaption><span>_config.yml</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="c1"># ----------------------- #</span>
</span><span class='line'><span class="c1">#      Main Configs       #</span>
</span><span class='line'><span class="c1"># ----------------------- #</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">url</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">http://yourblogurl.com</span>
</span><span class='line'><span class="l-Scalar-Plain">title</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Your Blog Name</span>
</span><span class='line'><span class="l-Scalar-Plain">subtitle</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Some catchy subtitle..</span>
</span><span class='line'><span class="l-Scalar-Plain">author</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">Your Name Here</span>
</span><span class='line'><span class="l-Scalar-Plain">simple_search</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">http://google.com/search</span>
</span><span class='line'><span class="l-Scalar-Plain">description</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">This will show in the META tags</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Making changes is as easy as changing the appropriate key/value
pair and then from the terminal, run: <code>rake preview</code> to view it on <a href="http://localhost:4000">http://localhost:4000</a></p>

<p>Deploying the site is just as easy:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake generate   <span class="c">#generate the static site content</span>
</span><span class='line'>rake deploy     <span class="c">#deploy the site to your deploy location (i.e. github)</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can even abbreviate deployment to: <code>rake gen_deploy</code></p>

<p>Octopress also has plenty of themes as a starting point for customizing your own blog.
The github repo <a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes">here</a> is a good starting point for 3rd party Octopress themes.</p>

<p>I am now (<em>for the time being</em>) sold on Octopress and will be using it for
my posts going forward. If you are in the market for a new static
blogging platform, give it a try &mdash; I think you will be pleasantly
surprised.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Batteries Included]]></title>
    <link href="http://switchspan.github.io/blog/2013/04/05/batteries-included/"/>
    <updated>2013-04-05T09:05:00-04:00</updated>
    <id>http://switchspan.github.io/blog/2013/04/05/batteries-included</id>
    <content type="html"><![CDATA[<p>I usually use a desktop PC and my Macbook Air on a daily basis during the week. In going back and forth between Windows and Mac OS X, I have noticed a couple of things that have hammered home the point that hardware is not the only thing Apple does well &mdash; software is too.</p>

<!-- more -->


<p><img class="left" src="http://switchspan.github.io/images/password_protect_files_snowleopard.jpg" width="350" title="Save as PDF on Mac" >
The first thing that occurred to me is Mac OS X has had the ability to print and edit PDF files at least since Mac OS X Leopard. With Windows, I need to download some type of PDF print driver and an Adobe viewer. Mac OS X has preview (which works for both images and PDF files), which will let me view and do some light editing on a PDF file as wells annotate.</p>

<p><img class="right" src="http://switchspan.github.io/images/notification-center.jpg" title="Mac OS Notification Center" >
The second thing I noticed was Mac OS X Lions notifications center provides not only a nice area to see your email and app notifications, but also an easy way to post to Twitter and Facebook. Growl notification is baked in as well &mdash; I have to download a growl client for windows (and the app has to use Growl).</p>

<p>I am not quite sure why Windows doesn&rsquo;t have &ldquo;batteries included&rdquo; when it comes to PDF files, but it is just a nice feature that Apple has added into Mac OS X. Don&rsquo;t get me wrong: I have used Windows for a long time &mdash; and I was a Windows user before I used a Mac. Windows gets a lot of things right and I will continue to use Windows as well &mdash; but Apple seems to be getting very good at sanding down the &ldquo;friction points&rdquo; you encounter with software to make for an easier, elegant user experience.</p>

<p>Sometimes its just nice for things to work as you intend them to and to serendipitously find some functionality that is often overlooked&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi...Finally!]]></title>
    <link href="http://switchspan.github.io/blog/2013/01/14/raspberry-pi-finally/"/>
    <updated>2013-01-14T09:30:00-05:00</updated>
    <id>http://switchspan.github.io/blog/2013/01/14/raspberry-pi-finally</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://switchspan.github.io/images/IMG_1420.jpg" width="244" height="184" title="Pi size comparison" >
Christmas really did come early last year: I finally received my <a href="http://www.raspberrypi.org/">Raspberry Pi</a> model B direct from the UK!  The Raspberry Pi has been so popular that there has been quite a few delays in production and delivery of these tasty little computers &mdash; and at $25 a piece they are economical and tasty!</p>

<!-- more -->


<h2>The Un-Boxing</h2>

<p><img class="left" src="http://switchspan.github.io/images/IMG_1413.jpg" width="244" height="184" title="Unpacking the Pi" >
I ordered my Raspberry Pi from <a href="http://uk.rs-online.com/">RS Online</a> around August and received it the week of November 26th (2012). The demand for these little computers has been tremendous and there are only a few authorized direct vendors in the UK (you can visit the <a href="http://www.raspberrypi.org/">Raspberry Pi site</a> to find the vendors).</p>

<p>My entire order consisted of the following:</p>

<ul>
<li>Raspberry Pi model B</li>
<li>RS Electronics protective case</li>
<li>4 GB SD Card Pre-loaded with <a href="http://www.raspbian.org/">Raspbian</a> (<a href="http://www.debian.org/">Debian</a> &ldquo;Wheezy&rdquo; based Linux)</li>
<li><a href="http://en.wikipedia.org/wiki/RCA_connector">RCA Stereo cables</a></li>
</ul>


<p><img class="right" src="http://switchspan.github.io/images/IMG_1496.jpg" width="244" height="184" title="Arduino and Pi" ></p>

<p>What I initially noticed when I opened the packaging to my new toy was the size of the Raspberry Pi. I have an <a href="http://www.arduino.cc/">Arduino</a> Uno and the Raspberry is nearly as small as the Uno.  After unboxing and taking pictures of all of the pieces, I worked on getting the Raspberry Pi into the protective case made by RS. This required a small amount of ‘gingerly’ trying to push the Raspberry Pi into place without breaking it or the case, but after a few minutes I figured out the easiest way to get it into and out of the case.</p>

<h2>Initial Setup</h2>

<p><img class="left" src="http://switchspan.github.io/images/IMG_1438.jpg" width="244" height="184" title="Keyboard and mouse" ></p>

<p>To connect the Raspberry Pi, you will need a USB keyboard, mouse, a Type B USB Plug (the size that most printers use), A <a href="https://www.sparkfun.com/products/11456">USB AC Wall Adapter/Charger</a> and either an <a href="http://en.wikipedia.org/wiki/HDMI">HDMI</a> connector or <a href="http://en.wikipedia.org/wiki/RCA_connector">RCA</a> cable.
If you want sound you might want to get a <a href="http://en.wikipedia.org/wiki/Stereo_jack">stereo</a> to <a href="http://en.wikipedia.org/wiki/RCA_connector">RCA</a> jack adaptor.</p>

<p>I started with plugging in the keyboard and most first, as it did not require power.</p>

<p>My next activity was to plug the Pi into my TV via the RCA jack.</p>

<p><img class="right" src="http://switchspan.github.io/images/IMG_1426.jpg" width="244" height="184" title="Hardcase and memory card" >
Always remember this with the RCA jacks: Yellow jacks are typically video, and your Red and White jacks are for left and right audio (stereo). On the Raspberry Pi, the video RCA jack is the same size on both ends, but the audio RCA is two regular size jacks which pair down into a small MP3 headphone size jack that plugs into the Pi.
You can see the RCA video plug in the pic below and the RCA audio plug is the small black plug next to it.
To start the Pi up, I plugged the USB charger into the wall and the USB Type B connector into the back of the Raspberry Pi.</p>

<p>The Raspbian menu lets you initially configure a lot of items which you will be potentially searching for after the setup &mdash; such as making it boot directly into X windows.
If you have kids using it, making it boot into X windows is a <strong>MUST</strong>.  <strong>Note:</strong> Once you set your defaults from the first boot up, you will not see the configuration page again (I would have a pic of this had I known!).
<em>You will have to ‘role up the sleeves’ and configure some Unix/Linux configuration files to make any changes after the initial setup.</em></p>

<h2>Boot Up</h2>

<p>The pic you can see below is the first boot up.</p>

<p><img class="left" src="http://switchspan.github.io/images/IMG_1435.jpg" width="244" height="184" title="First boot up" >
The boot up screen shows some typical Linux boot-up kernel ring buffer messages.
The Raspberry Pi&rsquo;s boot up was rather speedy and took only a few seconds
&ndash; the benefit of booting off of a flash drive.
The Raspberry Pi is capable of detecting on boot whether you have the RCA jack plugged in or the HDMI cable plugged in.
I recommend HDMI if you have a flat screen as it seems to be abled to handle the screen resolutions better than the RCA jack. &nbsp;</p>

<h2>Pi Desktop</h2>

<p><img class="right" src="http://switchspan.github.io/images/IMG_1462.jpg" width="244" height="184" title="Raspberry Pi desktop" ></p>

<p>The Raspberry Pi logo is prominent on a rather clean desktop look. All of the main items such as the <a href="http://docs.python.org/2/library/idle.html">IDLE</a>, <a href="http://scratch.mit.edu/">Scratch</a> and Python Games.</p>

<p>My sons enjoyed playing the “<a href="http://pygame.org/project-Squirrel+Eat+Squirrel-1853-3764.html">Squirrel Game</a>” which consists of trying to eat smaller squirrels to make your squirrel bigger.
They kept at it until they won the game.<br/>
My older son also played with scratch quite a bit – but it kept locking up, which I believe might be due to the under-powered <a href="http://en.wikipedia.org/wiki/Universal_Serial_Bus">USB</a> hub I was using.
<img class="left" src="http://switchspan.github.io/images/IMG_1464.jpg" width="244" height="184" title="The Squirrel Game" >
You really have to make sure you have a powered one, as the Pi can only supply so much power for the <a href="http://en.wikipedia.org/wiki/Universal_Serial_Bus">2 USB ports</a> that it has.
Once you have a keyboard and mouse plugged in there is not much room for more.
I used a USB hub to give me a little more ‘reach’ with my keyboard and mouse, so they didn’t have to be directly in front of the TV.
The moral here: Make sure you have enough power for the USB bus – a steady 5 volts DC. Also: You will want a decent USB hub if you want to use more than the 2 USB Type A Plugs that are on the front of the Raspberry Pi.</p>

<h2>Game Over</h2>

<p><img class="center" src="http://switchspan.github.io/images/IMG_1445.jpg" width="244" height="184" title="Game Over" >
So, it is ‘Game Over’ for this post on the Raspberry Pi. I will continue to tinker with it and hopefully have some more items to report.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Refining your tech talk]]></title>
    <link href="http://switchspan.github.io/blog/2013/01/10/refining-your-tech-talk/"/>
    <updated>2013-01-10T09:30:00-05:00</updated>
    <id>http://switchspan.github.io/blog/2013/01/10/refining-your-tech-talk</id>
    <content type="html"><![CDATA[<h2>Shaking off the rust</h2>

<p><img class="left" src="http://switchspan.github.io/images/hanselman.jpg" title="Scott Hanselman" >
Last night I did the first tech talk (<a href="http://www.rabbitmq.com/">RabbitMQ</a> and <a href="http://easynetq.com/">EasyNetQ</a>) that I have done in at least a one or two years at the <a href="http://www.hrnug.org/">Hampton Roads .NET Users Group (HRNUG)</a>.</p>

<p>I try to have respect for my audience when giving these talks and work
provide them with something that is entertaining as well as
educational. I wouldn’t want my time wasted with a bad presentation – so I don’t want to waste the audience’s time either! In giving my talks, I strive to emulate the great tech speakers and educators like <a href="http://www.hanselman.com/blog/">Scott Hanselman</a> and <a href="http://www.8thlight.com/our-team/robert-martin">‘Uncle Bob’ Martin</a>.</p>

<!-- more -->


<p><a href="http://wekeroad.com/">Rob Connery</a> does a great interview of Scott Hanselman in his Full Throttle series on Tekpub on <a href="http://tekpub.com/productions/ft_speaker">how Scott prepares for a tech talk</a>. If you are serious about giving tech talks, I highly recommend you look at it.</p>

<h2>What I learned</h2>

<p>Tech talks can through you some curve-balls that; if you are willing to pay attention, can provide some teachable moments that you can use to refine future tech talks. I found my teachable moments in a couple of areas while giving the presentation:</p>

<ol>
<li><p>Make sure to use your phone or watch as a timer – to help you keep the ‘pace’ through your tech talk. Setting it to the max talk time and having it count down will work – or have a half way point set and check to see where you are in the total presentation I was allotted 60 – 75 minutes, but my talk came in at around 45 minutes because I though I was running out of time. These extra minutes could have been used to dive deeper into my code examples!</p></li>
<li><p>If you haven’t been playing with PowerPoint lately, <a href="http://presentationsoft.about.com/od/powerpoint101/ss/shortcuts.htm">brush up on the start (F5) / restart (SHIFT-F5) keystrokes</a>. When you are in the middle of a presentation, it can disrupt the flow of the talk when you have to forward to the last slide you where one. I rehearsed my talk, except I didn’t rehearse switching into my demos. While F5 will start a slideshow in Power Point, it always starts at the beginning. In the middle of the talk, I couldn’t remember what the restart keystroke was, so I had to forward from the beginning slide each time I stopped for a demo. This can be a little choppy for the viewers.</p></li>
<li><p>If you use any other tools, such as <a href="http://technet.microsoft.com/en-us/sysinternals/bb897434.aspx">ZoomIt</a> – make sure you set their key mappings to what you want them to be and make sure you practice using it in your talk rehearsal.</p></li>
</ol>


<p> Fortunately I get a do-over next month with the <a href="http://757rb.org/">757 Ruby Users Group</a>. I have some tweaking to do to the presentation in order to tailor it for a slightly different audience, but the changes are really just the demos and substituting the <a href="https://github.com/ruby-amqp/amqp">amqp gem</a> for EasyNetQ. But my lessons learned on the presentation flow will definitely be incorporated.</p>

<p><img class="center" src="http://switchspan.github.io/images/unclebob.jpg" title="Uncle Bob Martin" ></p>

<p> I am sure there will be many more of these teachable moments in the future…</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Global day of Coderetreat]]></title>
    <link href="http://switchspan.github.io/blog/2012/12/09/global-day-of-coderetreat/"/>
    <updated>2012-12-09T20:44:00-05:00</updated>
    <id>http://switchspan.github.io/blog/2012/12/09/global-day-of-coderetreat</id>
    <content type="html"><![CDATA[<p>Yesterday I participated in my first
<a href="http://coderetreat.org">coderetreat</a> at <a href="http://www.757creativespace.com">757 Creative Space</a> in Norfolk, VA.
 This happened to be the <a href="http://globalday.coderetreat.org/">Global day of Coderetreat</a> (which was organized by coderetreat.org) and now I am wondering why I didn’t go to a coderetreat sooner.
The coderetreat was facilitated by <a href="http://myfakeif.blogspot.com/">Ryan
Castillo</a> from the <a href="http://757rb.org">757Ruby users group</a> and sponsored by some great companies: <a href="http://www.bootstraphero.com">Bootstrap
Hero</a> and <a href="http://www.xtuple.com/">xTuple</a> sponsored all of the good eats (which are essential to keep the code flowing!) and there were quite a few other great sponsors as well.</p>

<!-- more -->


<h2>What is a code retreat?</h2>

<p><img class="left" src="http://switchspan.github.io/images/IMG_1509.jpg" width="184" height="244">
If you haven’t been to a coderetreat – it basically a day of honing your software development skills to become a better developer.
If you are serious about your profession as a software developer – these
types of training opportunities are ones you should attend. In our day’s
retreat, we focused on the skills of
<a href="http://en.wikipedia.org/wiki/Test-driven_development">TDD</a> and
<a href="http://www.extremeprogramming.org/rules/pair.html">Pair Programming</a>.
Both of these techniques are part of <a href="http://www.extremeprogramming.org/index.html">Extreme Programming</a>.
The idea for coderetreat was spawned at the January, 2009, Codemash
Conference by Gary Bernhardt, Patrick Welsh, Nayan Hajratwala and Corey
Haines.</p>

<h2>The day&rsquo;s activities</h2>

<p><img class="right" src="http://switchspan.github.io/images/IMG_1510.jpg" width="244" height="184">
The only project used for the day is to code a version of <a href="http://en.wikipedia.org/wiki/Conway%27s_game_of_life">Conway&rsquo;s Game
of Life</a>.
Now, I knew a little about the Game of Life and that it was typically central to a coderetreat, but I purposefully did not look up any info on coding it, because I didn’t want it to take away from the discovery experience.
Programmers are typically paired for 45 minutes and each pair has to delete all code and destroy all notes at the end of their iteration.</p>

<p>Ryan did a great job of getting everyone introduced and oriented. Once we had all of the intros under our belt, we paired up and started on our first iteration of the Game of Life.</p>

<h3>Along came the curve-balls</h3>

<p>Then came the curve-balls: requirements changing during the iterations, ping-pong coding (switching the person typing and observing between writing functions), blind coding (the 2 programmers couldn’t talk, and one wrote the tests – the other the code to pass the test) and timed coding from test to implementation.
<img class="left" src="http://switchspan.github.io/images/IMG_1512.jpg" width="244" height="184"></p>

<p>Each of these “curve-balls” built on the other and exposed some of the typical flaws in the way most people write software as well as the things that can be done to fix it.
After each 45 minute iteration we held a sort of “after action review” to see what each person had learned from the iteration.
These iterations brought out the importance of writing clear function/method/variable names, writing your tests first, and doing the simplest thing possible to pass the test, then moving to the next item.
It is amazing to see how quickly this technique of TDD can flush out an excellent design for any software project.</p>

<h3>The retrospective</h3>

<p>The day ended in a wrap-up review of all of the items during the day from iteration – to see what we had learned, what were surprised by, and what we would change.
Everyone seemed to have picked up something constructive from the experience – so the coderetreat was in my opinion a big success.</p>

<p>Ryan was a great facilitator for the event – he nudged us into seeing the ‘teachable moments’ during the iterations.
Meeting all of the great developers there was also a great part of the experience.
We had programmers coding in Java, C#, Ruby, Python, JavaScript, and even Objective-C. Everyone was willing to work with others, even in languages they were not quite familiar with.
 We even had a pair of developers that came down from Richmond to attend the event.</p>

<p>I look forward to the next coderetreat!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing for missing iPhone in iTunes with Windows 8]]></title>
    <link href="http://switchspan.github.io/blog/2012/11/21/fixing-for-missing-iphone-in-itunes-with-windows-8/"/>
    <updated>2012-11-21T13:51:00-05:00</updated>
    <id>http://switchspan.github.io/blog/2012/11/21/fixing-for-missing-iphone-in-itunes-with-windows-8</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://switchspan.github.io/images/Fake_Windows_8_Start.png" width="300" title="Windows 8 Desktop" >
After I installed Windows 8 on my laptop (I upgraded from Windows 7), the only annoyance I found was iTunes would not recognize my iPhone 4S anymore &mdash; even when plugged in via USB. As you can imagine, this makes syncing the phone a little bit of a problem (Wifi was not working either).</p>

<!-- more -->


<p>I finally found a fix for it after doing a little &lsquo;digging&rsquo; via Google.</p>

<p>The main fix (for me) can be found <a href="http://support.apple.com/kb/TS1538">here</a>.</p>

<p><img class="right" src="http://switchspan.github.io/images/itunes_logo.jpg" width="150" title="iTunes Logo" >
I ended up following section #5 in the link &mdash; which is &ldquo;Verify that the Apple Mobile Device USB Driver is installed&rdquo;.
I found Apple iPhone under the Device manager&rsquo;s photo devices and updated the driver using the directions in the knowledge base article.</p>

<p>Now: POOF! It works&hellip;Christmas came early.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Installing updates 4 of 6]]></title>
    <link href="http://switchspan.github.io/blog/2012/11/19/installing-updates-4-of-6/"/>
    <updated>2012-11-19T01:06:00-05:00</updated>
    <id>http://switchspan.github.io/blog/2012/11/19/installing-updates-4-of-6</id>
    <content type="html"><![CDATA[<p><img class="right" src="http://switchspan.github.io/images/please_wait.jpg" width="325" title="Installing updates 4 of 6" alt="Installing updates 4 of 6">
OK: I like Windows 8 so far. I think it is a pretty good OS. My only gripe with it so far is that lately it has been stalling on the updates. The screen will say something to the effect of &ldquo;Do not power down&rdquo; and &ldquo;Installing update 4 of 6&rdquo;. It will do this for several hours&hellip;with occasional hard disk activity. Eventually I have to pull the battery on my laptop to restart it. I am thinking: Really??</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DIY]]></title>
    <link href="http://switchspan.github.io/blog/2012/11/18/diy/"/>
    <updated>2012-11-18T23:36:00-05:00</updated>
    <id>http://switchspan.github.io/blog/2012/11/18/diy</id>
    <content type="html"><![CDATA[<p>Well today was a productive day: I changed the rear brake pads and rotors for my car today.</p>

<p><img class="left" src="http://switchspan.github.io/images/car_repair_8bit.jpg" width="325">
Yes, I know this is not as great an automotive accomplishment as rebuilding an engine. However, I find something innately satisfying with getting your hands dirty and figuring out how to do something you normally don&rsquo;t do. I have always enjoyed figuring out how to fix things and perhaps that is what drew me into computers and software.</p>

<!-- more -->


<p>I believe we have a lot of technology (cars being one of them) that most of us use and take for granted. When this technology needs to be maintained/repaired many of us lack the knowledge to do so. My personal goal to counter this lack of &lsquo;automotive know-how&rsquo; is to fix whatever can on my car, whenever I can &mdash; and hopefully save money in the process.</p>

<p>Here are some of the resources I have found helpful:</p>

<ul>
<li><a href="http://www.oreillyauto.com/">O&#8217;Reilly auto parts</a> &ndash; my favorite auto parts store.</li>
<li><a href="http://www.haynes.com/mole-video">Haynes Manuals Online</a> &ndash; a must have for DIY auto repair.</li>
</ul>

]]></content>
  </entry>
  
</feed>
